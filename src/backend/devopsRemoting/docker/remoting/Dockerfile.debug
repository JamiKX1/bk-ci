# 仅作为调试使用，后面上线应换成正式仓库
# FROM mirrors.tencent.com/ruotiantang/openvscode-server-demo:1.2 as vscode

FROM mirrors.tencent.com/ci/remote-dev-full:0.0.4

# # 从vscode镜像拷贝vscode
# COPY --from=vscode --chown=33333:33333 /ide/ /ide/
# 从gitpod拷贝镜像
# RUN wget https://github.com/gitpod-io/openvscode-server/releases/download/openvscode-server-v1.74.3/openvscode-server-v1.74.3-linux-x64.tar.gz && \
#     tar -xzf openvscode-server-v1.74.3-linux-x64.tar.gz && \
#     mv -f openvscode-server-v1.74.3-linux-x64 /ide && \
#     cp /ide/bin/openvscode-server /ide/bin/devopsRemoting-vscode && \
#     rm -f openvscode-server-v1.74.3-linux-x64.tar.gz
# 拷贝webide启动构建相关
# COPY --chown=33333:33333 ide/vscode/devopsRemoting-ide-config.json bin/vscodehelper /ide/

# 拷贝ide桌面版启动构建相关
COPY --chown=33333:33333 ide/vscode-desktop/devopsRemoting-ide-desktop-config.json bin/vscode-desktop-status /ide-desktop/

# 拷贝devopsRemoting
COPY --chown=33333:33333 test/devopsRemoting-config.json bin/devopsRemoting /.devopsRemoting/

# 拷贝ssh
COPY --chown=33333:33333 openssh/sshd openssh/ssh-keygen /.devopsRemoting/ssh/
RUN mkdir -p /var/empty

RUN mkdir -p /data/landun/workspace/

# -------------------------------- 以下只是方便调试使用 --------------------------------

USER root
# 增加go依赖方便调试
# ARG GO_VERSION="1.19.3"
# ENV GO_VERSION=${GO_VERSION}
# ENV GOPATH=$HOME/go-packages
# ENV GOROOT=$HOME/go
# ENV PATH=$GOROOT/bin:$GOPATH/bin:$PATH
# RUN curl -fsSL https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz | tar xzs && \
# # install VS Code Go tools for use with gopls as per https://github.com/golang/vscode-go/blob/master/docs/tools.md
# # also https://github.com/golang/vscode-go/blob/27bbf42a1523cadb19fad21e0f9d7c316b625684/src/goTools.ts#L139
#     go install -v github.com/uudashr/gopkgs/cmd/gopkgs@v2 && \
#     go install -v github.com/ramya-rao-a/go-outline@latest && \
#     go install -v github.com/cweill/gotests/gotests@latest && \
#     go install -v github.com/fatih/gomodifytags@latest && \
#     go install -v github.com/josharian/impl@latest && \
#     go install -v github.com/haya14busa/goplay/cmd/goplay@latest && \
#     go install -v github.com/go-delve/delve/cmd/dlv@latest && \
#     go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
#     go install -v golang.org/x/tools/gopls@latest && \
#     go install -v honnef.co/go/tools/cmd/staticcheck@latest && \
#     sudo rm -rf $GOPATH/src $GOPATH/pkg $HOME/.cache/go $HOME/.cache/go-build && \
#     printf '%s\n' 'export GOPATH=/workspace/go' \
#                   'export PATH=$GOPATH/bin:$PATH' > $HOME/.bashrc.d/300-go

ENV DEVOPS_REMOTING_DEBUG_ENABLE="true"
ENV DEVOPS_REMOTING_WORKSPACE_ID="ruotiantang-9c8e15094e8ddfce"
ENV DEVOPS_REMOTING_GIT_USERNAME="ruotiantang"
ENV DEVOPS_REMOTING_IDE_PORT="23000"
ENV DEVOPS_REMOTING_WORKSPACE_ROOT_PATH="/data/landun/workspace"
ENV DEVOPS_REMOTING_GIT_REPO_ROOT_PATH="/data/landun/workspace/ruotian_remote_go_test"
ENV DEVOPS_REMOTING_GIT_EMAIL="ruotiantang@tencent.com"
ENV DEVOPS_REMOTING_YAML_NAME=".preci/devfile.yaml"
ENV DEVOPS_REMOTING_WORKSPACE_FIRST_CREATE="true"
ENV DEVOPS_REMOTING_PRECI_DOWN_URL="https://bkrepo.woa.com/generic/bkdevops/static/gw/resource/preci/test_latest/linux/preci"
ENV DEVOPS_REMOTING_PRECI_GATEWAY_URL="https://devops.woa.com"
ENV DEVOPS_REMOTING_BACKEND_HOST="https://dev.devops.woa.com"
ENV DEVOPS_REMOTING_GIT_REMOTE_REPO_URL="https://git.woa.com/ruotiantang/ruotian_remote_go_test.git"
ENV DEVOPS_REMOTING_DOTFILE_REPO="https://git.woa.com/ruotiantang/ruotian_remote_dotfile_repo.git"

WORKDIR /data/landun/workspace/ruotian_remote_go_test

ENTRYPOINT [ "/bin/sh", "-c", "exec /.devopsRemoting/devopsRemoting init" ]
